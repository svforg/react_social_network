{"version":3,"sources":["components/Main/Profile/User/User.module.scss","components/Main/Users/User/User.module.scss","components/Header/Header.module.scss","components/ui-elements/CustomTextArea/CustomTextArea.module.scss","components/Main/Profile/Posts/Post/User/User.module.scss","components/Main/Sidebar/Sidebar.module.scss","components/Main/Main.module.scss","components/ui-elements/CustomButton/CustomButton.module.scss","components/Main/Profile/Posts/Post/Like/Like.module.scss","components/Main/Sidebar/SidebarItem/SidebarItem.module.scss","components/Main/Dialogs/Dialogs.module.scss","components/Main/Dialogs/Persons/Persons.module.scss","components/Main/Dialogs/Messages/Messages.module.scss","components/Main/Dialogs/Messages/CreateMessage/CreateMessage.module.scss","components/Main/Profile/Posts/Posts.module.scss","components/Main/Profile/Posts/Post/Post.module.scss","components/Main/Profile/Posts/Post/Message/Message.module.scss","components/Main/Profile/CreatePost/CreatePost.module.scss","components/ui-elements/PreLoader/PreLoader.module.scss","serviceWorker.ts","redux/constats/dialogsConstats.ts","redux/reducers/dialogsReducer.ts","redux/constats/profileConstats.ts","redux/reducers/profileReducer.ts","redux/constats/usersConstats.ts","redux/reducers/sidebarReducer.ts","redux/reducers/usersReducer.ts","redux/store.ts","components/Header/Header.tsx","components/Main/Dialogs/Persons/Person/Person.tsx","components/Main/Dialogs/Persons/Persons.tsx","components/Main/Dialogs/Messages/Message/Message.tsx","components/ui-elements/CustomTextArea/CustomTextArea.tsx","components/ui-elements/CustomButton/CustomButton.tsx","components/Main/Dialogs/Messages/CreateMessage/CreateMessage.tsx","components/Main/Dialogs/Messages/Messages.tsx","components/Main/Dialogs/Dialogs.tsx","redux/selectors/dialogsSelectors.ts","containers/Main/Dialogs/DialogsContainer.tsx","redux/actions/dialogsActions.ts","components/Main/Profile/Posts/Post/User/User.tsx","components/Main/Profile/Posts/Post/Message/Message.tsx","components/Main/Profile/Posts/Post/Like/Like.tsx","components/Main/Profile/Posts/Post/Post.tsx","components/Main/Profile/Posts/Posts.tsx","components/Main/Profile/User/User.tsx","components/Main/Profile/CreatePost/CreatePost.tsx","components/Main/Profile/Profile.tsx","redux/selectors/profileSelectors.ts","containers/Main/Profile/ProfileContainer.tsx","redux/actions/profileActions.ts","components/Main/Sidebar/SidebarItem/SidebarItem.tsx","components/Main/Sidebar/Sidebar.tsx","redux/selectors/sidebarSelectors.ts","containers/Main/Sidebar/SidebarContainer.tsx","components/Main/Users/User/User.tsx","components/Main/Users/Users.tsx","components/ui-elements/PreLoader/PreLoader.tsx","containers/Main/Users/UsersContainer.tsx","redux/actions/usersActions.ts","components/Main/Main.tsx","App.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","DIALOGS_TYPES","PROFILE_TYPES","initialState","persons","id","name","messages","text","messageText","USERS_TYPES","posts","like","postText","slug","title","users","pageSize","totalCount","currentPage","isFetching","reducers","combineReducers","dialogs","state","action","type","ADD_DIALOG_MESSAGE","ADD_DIALOG_MESSAGE_TEXT","payload","profile","ADD_PROFILE_POST","postId","ADD_PROFILE_POST_TEXT","sidebar","FOLLOW_USER","stateCopy","newUsers","map","user","userId","followed","UN_FOLLOW_USER","SHOW_NEXT_USERS","SHOW_MORE_USERS","SET_CURRENT_PAGE","page","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","store","createStore","Header","className","css","header","logoLink","href","logoImg","src","alt","logoTxt","Person","React","memo","path","active","to","Persons","personElements","person","listName","Message","message","CustomTextArea","label","restProps","formGroup","labelTitle","inputField","CustomButton","btnClassName","button","button_filled","CreateMessage","addDialogMessage","addDialogMessageText","form","value","onChange","e","currentTarget","onClick","Messages","messageElements","listMessage","Dialogs","selectDialogs","DialogsContainer","useSelector","dispatch","_useDispatch","ActionCreator","useDispatch","User","ava","pic","Like","Post","post","Posts","postElements","key","backgroundWrapper","background","info","avatarWrapper","avatar","caption","CreatePost","addProfilePost","addProfilePostText","Profile","selectProfile","ProfileContainer","v1","Item","sidebarItem","item","activeClassName","Sidebar","sidebarElements","sidebarNav","list","selectSidebar","SidebarContainer","unFollowUser","followUser","userSmPhoto","photos","small","userLgPhoto","large","userStatus","status","card","coverContainer","coverImg","userContainer","userDetails","userImgInner","userImg","Users","loadNextCallback","loadMoreCallback","propsTotal","propsPageSize","pagesCnt","Math","ceil","pagesIndexes","i","push","pages","pagesIndex","leftColumn","rightColumn","index","Grid","container","xs","spacing","Fragment","PreLoader","preLoaderCubic","UsersContainer","props","setCurrentPageAC","axios","get","then","response","showMoreUsersAC","data","items","toggleIsFetchingAC","showNextUsersAC","followUserCallback","followUserAC","unFollowUserCallback","unFollowUserAC","this","setTotalCountAC","Component","connector","connect","Main","main","content","render","App","reRenderEntireTree","ReactDOM","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.d4c1b265.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__360G_\",\"backgroundWrapper\":\"User_backgroundWrapper__3NbxH\",\"background\":\"User_background__2F9F4\",\"info\":\"User_info__2SaOO\",\"avatarWrapper\":\"User_avatarWrapper__35H1J\",\"avatar\":\"User_avatar__2ACgE\",\"caption\":\"User_caption__3XxTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"User_card__3jTJj\",\"coverContainer\":\"User_coverContainer__Lm22B\",\"coverImg\":\"User_coverImg__2rA3O\",\"userContainer\":\"User_userContainer__1uv0Q\",\"userDetails\":\"User_userDetails__13Z3l\",\"userImgInner\":\"User_userImgInner__SwpEP\",\"userImg\":\"User_userImg__cqqgu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Ofbv\",\"logoLink\":\"Header_logoLink__NpAWD\",\"logoImg\":\"Header_logoImg__2ZvgM\",\"logoTxt\":\"Header_logoTxt__36XDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll-disable\":\"CustomTextArea_scroll-disable__3agq_\",\"app-inner\":\"CustomTextArea_app-inner__x_-bu\",\"wrapper\":\"CustomTextArea_wrapper__1twKi\",\"h1\":\"CustomTextArea_h1__1qLSy\",\"h2\":\"CustomTextArea_h2__2vRTw\",\"h3\":\"CustomTextArea_h3__giVId\",\"h4\":\"CustomTextArea_h4__2xfSQ\",\"h5\":\"CustomTextArea_h5__2t7ZV\",\"h6\":\"CustomTextArea_h6__3IILy\",\"hero__headline\":\"CustomTextArea_hero__headline__2vrN3\",\"button\":\"CustomTextArea_button__2C4Rx\",\"button_filled\":\"CustomTextArea_button_filled__1Bkik\",\"button_default\":\"CustomTextArea_button_default__3OnHk\",\"button_light\":\"CustomTextArea_button_light__2utlR\",\"button_blink\":\"CustomTextArea_button_blink__3LD_b\",\"sheen\":\"CustomTextArea_sheen__2mKws\",\"inputField\":\"CustomTextArea_inputField__2T0kH\",\"inputField_invalid\":\"CustomTextArea_inputField_invalid__EFgcb\",\"formGroup\":\"CustomTextArea_formGroup__2MJHl\",\"label\":\"CustomTextArea_label__3HiCU\",\"labelTitle\":\"CustomTextArea_labelTitle__2Lkup\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3GErM\",\"ava\":\"User_ava__XVCXl\",\"pic\":\"User_pic__3EpGP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar___rBWd\",\"list\":\"Sidebar_list__2Cf-j\",\"sidebarNav\":\"Sidebar_sidebarNav__1wFJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__3boZS\",\"content\":\"Main_content__3YMWo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll-disable\":\"CustomButton_scroll-disable__1ji9b\",\"app-inner\":\"CustomButton_app-inner__4lHbm\",\"wrapper\":\"CustomButton_wrapper__jyf2C\",\"h1\":\"CustomButton_h1__gsQsN\",\"h2\":\"CustomButton_h2__3A3I3\",\"h3\":\"CustomButton_h3__3JGd-\",\"h4\":\"CustomButton_h4__2vtEO\",\"h5\":\"CustomButton_h5__1LgyW\",\"h6\":\"CustomButton_h6__3ftDO\",\"hero__headline\":\"CustomButton_hero__headline__1eUo-\",\"button\":\"CustomButton_button__3-hG4\",\"button_filled\":\"CustomButton_button_filled__1XSGe\",\"button_default\":\"CustomButton_button_default__1xvmc\",\"button_light\":\"CustomButton_button_light__QjDhN\",\"button_blink\":\"CustomButton_button_blink__dha_4\",\"sheen\":\"CustomButton_sheen__QNSiq\",\"inputField\":\"CustomButton_inputField__3Cbgp\",\"inputField_invalid\":\"CustomButton_inputField_invalid__14nXL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"like\":\"Like_like__3FLCG\",\"pic\":\"Like_pic__1sU1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SidebarItem_item__2vddL\",\"active\":\"SidebarItem_active__gFKhg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Y09r\",\"name\":\"Dialogs_name__3AGSk\",\"listMessage\":\"Dialogs_listMessage__3lS8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listName\":\"Persons_listName__2waaD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listMessage\":\"Messages_listMessage__1uqPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CreateMessage_form__2vC14\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__2sN9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__pJs-k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3I62F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CreatePost_form__1demw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preLoaderCubic\":\"PreLoader_preLoaderCubic__2S7sN\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const ADD_DIALOG_MESSAGE = \"ADD_DIALOG_MESSAGE\";\r\nconst ADD_DIALOG_MESSAGE_TEXT = \"ADD_DIALOG_MESSAGE_TEXT\";\r\n\r\nexport enum DIALOGS_TYPES {\r\n    ADD_DIALOG_MESSAGE,\r\n    ADD_DIALOG_MESSAGE_TEXT,\r\n}","import {DIALOGS_TYPES} from \"../constats/dialogsConstats\";\r\nimport {DialogsACType} from \"../actions/dialogsActions\";\r\n\r\nexport type PersonsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesType = {\r\n    id: number\r\n    text: string\r\n}\r\nexport type DialogsType = {\r\n    persons: Array<PersonsType>\r\n    messages: Array<MessagesType>\r\n    messageText: string\r\n}\r\n\r\n\r\nlet initialState = {\r\n    persons: [\r\n        {id: 1, name: \"Slavbl4\"},\r\n        {id: 2, name: \"Dimbl4\"},\r\n        {id: 3, name: \"Svetbl4\"},\r\n        {id: 4, name: \"Yambl4\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, text: \"hi from Slavbl4\"},\r\n        {id: 2, text: \"hi from Dimbl4\"},\r\n        {id: 3, text: \"hi from Svetbl4\"},\r\n        {id: 4, text: \"hi from Yambl4\"},\r\n    ],\r\n    messageText: \"\",\r\n};\r\n\r\nexport const dialogsReducer = (state: DialogsType = initialState, action: DialogsACType): DialogsType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case DIALOGS_TYPES.ADD_DIALOG_MESSAGE:\r\n            return state.messageText\r\n                ? {\r\n                    ...state,\r\n                    messageText: \"\",\r\n                    messages: [...state.messages, { id: 5, text: state.messageText }],\r\n                  }\r\n                : state;\r\n\r\n        case DIALOGS_TYPES.ADD_DIALOG_MESSAGE_TEXT:\r\n            return action.payload.messageText ? {...state, messageText: action.payload.messageText} : state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","const ADD_PROFILE_POST = \"ADD_PROFILE_POST\";\r\nconst ADD_PROFILE_POST_TEXT = \"ADD_PROFILE_POST_TEXT\";\r\n\r\nexport enum PROFILE_TYPES {\r\n    ADD_PROFILE_POST,\r\n    ADD_PROFILE_POST_TEXT,\r\n}","\r\nimport {ProfileACType} from \"../actions/profileActions\";\r\nimport {PROFILE_TYPES} from \"../constats/profileConstats\";\r\n\r\nexport type ProfilePostType = {\r\n    id: string\r\n    text: string\r\n    like: number\r\n}\r\nexport type ProfileType = {\r\n    posts: Array<ProfilePostType>\r\n    postText: string\r\n}\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: \"1\", text: \"Hello world\", like: 10},\r\n        {id: \"2\", text: \"It's first post\", like: 20},\r\n        {id: \"3\", text: \"It's second post\", like: 30},\r\n    ],\r\n    postText: \"\",\r\n};\r\n\r\nexport const profileReducer = (state:ProfileType = initialState, action: ProfileACType): ProfileType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case PROFILE_TYPES.ADD_PROFILE_POST:\r\n            return state.postText\r\n                ? {\r\n                    ...state,\r\n                    postText: \"\",\r\n                    posts: [...state.posts, { id: action.payload.postId, text: state.postText, like: 0 }]\r\n                  }\r\n                : state;\r\n\r\n        case PROFILE_TYPES.ADD_PROFILE_POST_TEXT:\r\n            return action.payload.postText ? { ...state, postText: action.payload.postText} : state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//let prepareString = (string: string) => string.replace(/\\s+/g, ' ').trim();\r\n","const SHOW_NEXT_USERS = \"SHOW_NEXT_USERS\";\r\nconst SHOW_MORE_USERS = \"SHOW_MORE_USERS\";\r\nconst FOLLOW_USER = \"FOLLOW_USER\";\r\nconst UN_FOLLOW_USER = \"UN_FOLLOW_USER\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\n\r\nexport enum USERS_TYPES {\r\n    SHOW_NEXT_USERS,\r\n    SHOW_MORE_USERS,\r\n    FOLLOW_USER,\r\n    UN_FOLLOW_USER,\r\n    SET_CURRENT_PAGE,\r\n    SET_TOTAL_COUNT,\r\n    TOGGLE_IS_FETCHING,\r\n}","let initialState = [\r\n    {slug: \"/profile\", title: \"Profile\"},\r\n    {slug: \"/dialogs\", title: \"Dialogs\"},\r\n    {slug: \"/users\", title: \"Users\"},\r\n];\r\n\r\nexport const sidebarReducer = (state:any = initialState, action: any) => {\r\n\r\n    return state;\r\n};\r\n","import {UsersACType} from \"../actions/usersActions\";\r\nimport {USERS_TYPES} from \"../constats/usersConstats\";\r\n\r\nexport type UsersPhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UsersType = {\r\n    id: string\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    photos: UsersPhotosType\r\n}\r\nexport type UsersState = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 16,\r\n    totalCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n};\r\n\r\nexport const usersReducer = (state: UsersState = initialState, action: UsersACType): UsersState => {\r\n\r\n    switch (action.type) {\r\n\r\n        case USERS_TYPES.FOLLOW_USER: {\r\n            let stateCopy = {...state, users: state.users};\r\n\r\n            let newUsers = stateCopy.users.map(user =>\r\n                (user.id === action.payload.userId) ? {...user, followed: true} : user );\r\n\r\n            return {...stateCopy, users: newUsers};\r\n        }\r\n\r\n        case USERS_TYPES.UN_FOLLOW_USER: {\r\n            let stateCopy = {...state, users: state.users};\r\n\r\n            let newUsers = stateCopy.users.map(user =>\r\n                (user.id === action.payload.userId) ? {...user, followed: false} : user );\r\n\r\n            return {...stateCopy, users: newUsers};\r\n        }\r\n\r\n        case USERS_TYPES.SHOW_NEXT_USERS:\r\n            return {...state, users: [...action.payload.users]};\r\n\r\n        case USERS_TYPES.SHOW_MORE_USERS:\r\n            return {...state, users: [...state.users, ...action.payload.users]};\r\n\r\n        case USERS_TYPES.SET_CURRENT_PAGE:\r\n            return  {...state, currentPage: action.payload.page};\r\n\r\n        case USERS_TYPES.SET_TOTAL_COUNT:\r\n            return  {...state, totalCount: action.payload.totalCount};\r\n\r\n        case USERS_TYPES.TOGGLE_IS_FETCHING:\r\n            return  {...state, isFetching: action.payload.isFetching};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import {combineReducers, createStore} from 'redux';\r\nimport {dialogsReducer} from \"./reducers/dialogsReducer\";\r\nimport {profileReducer} from \"./reducers/profileReducer\";\r\nimport {sidebarReducer} from \"./reducers/sidebarReducer\";\r\nimport {usersReducer} from \"./reducers/usersReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    dialogs: dialogsReducer,\r\n    profile: profileReducer,\r\n    sidebar: sidebarReducer,\r\n    users: usersReducer,\r\n});\r\n\r\nexport type IGlobalState = ReturnType<typeof reducers>;\r\n\r\nexport const store = createStore(reducers);\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport css from './Header.module.scss';\r\n\r\nexport const Header: React.FC = () => {\r\n    return (\r\n        <header className={css.header}>\r\n            <div className=\"wrapper\">\r\n\r\n                <a className={css.logoLink}\r\n                   href=\"/\"\r\n                   title=\"Our logo\">\r\n\r\n                    <img className={css.logoImg}\r\n                         src=\"https://vk.com/images/svg_icons/ic_head_logo.svg\"\r\n                         alt=\"Our logo\"/>\r\n\r\n                    <span className={css.logoTxt}>\r\n                        Social\r\n                    </span>\r\n                </a>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport css from './Person.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PersonsType} from \"../../../../../redux/reducers/dialogsReducer\";\r\n\r\ntype PersonPropsType = PersonsType\r\n\r\n\r\nconst PersonMemo: React.FC<PersonPropsType> = (\r\n    {\r\n        id,\r\n        name\r\n    }\r\n) => {\r\n    const path = `/dialogs/${id}`;\r\n\r\n    return (\r\n        <div className={`${css.name} ${css.active}`}>\r\n            <NavLink to={path}>{name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Person = React.memo(PersonMemo);\r\n","import React from \"react\";\r\nimport {Person} from \"./Person/Person\";\r\nimport css from './Persons.module.scss';\r\nimport {PersonsType} from \"../../../../redux/reducers/dialogsReducer\";\r\n\r\ntype PersonsPropsType = {\r\n    state: Array<PersonsType>\r\n}\r\n\r\nexport const Persons: React.FC<PersonsPropsType> = React.memo((\r\n    {\r\n        state\r\n    }\r\n) => {\r\n    const personElements = state && state\r\n        .map((person: PersonsType) => <Person id={person.id} name={person.name}/>);\r\n\r\n    return (\r\n        <div className={css.listName}>\r\n            {personElements}\r\n        </div>\r\n    );\r\n});\r\n","import React from \"react\";\r\nimport css from './Message.module.scss';\r\n\r\ntype MessagePropsType = {\r\n    text: string\r\n}\r\n\r\nconst MessageMemo: React.FC<MessagePropsType> = (\r\n    {\r\n        text\r\n    }\r\n) => {\r\n    return (\r\n        <div className={css.message}>\r\n            {text}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Message = React.memo(MessageMemo);\r\n","import React, {DetailedHTMLProps, TextareaHTMLAttributes} from 'react';\r\nimport css from \"./CustomTextArea.module.scss\";\r\n\r\ntype DefaultTextAreaPropsType = DetailedHTMLProps<TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement> & {\r\n    label: string\r\n}\r\n\r\nconst CustomTextAreaMemo: React.FC<DefaultTextAreaPropsType> = (\r\n    {\r\n        label,\r\n        ...restProps\r\n    }\r\n) => {\r\n    return (\r\n        <div className={css.formGroup}>\r\n\r\n            <label className={css.label}>\r\n\r\n                <span className={css.labelTitle}>{label}</span>\r\n\r\n                <textarea className={css.inputField} {...restProps} />\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const CustomTextArea = React.memo(CustomTextAreaMemo);","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport css from \"./CustomButton.module.scss\";\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\nconst CustomButtonMemo: React.FC<DefaultButtonPropsType> = (\r\n    {\r\n        ...restProps\r\n    }\r\n) => {\r\n    const btnClassName = `${css.button} ${css.button_filled}`;\r\n\r\n    return (\r\n        <button className={btnClassName} {...restProps} />\r\n    );\r\n};\r\n\r\nexport const CustomButton = React.memo(CustomButtonMemo);\r\n","import React, {ChangeEvent} from \"react\";\r\nimport css from \"./CreateMessage.module.scss\";\r\nimport {CustomTextArea} from \"../../../../ui-elements/CustomTextArea/CustomTextArea\";\r\nimport {CustomButton} from \"../../../../ui-elements/CustomButton/CustomButton\";\r\n\r\ntype CreateMessageType = {\r\n    state: string\r\n    addDialogMessage: () => void\r\n    addDialogMessageText: (messageText: string) => void\r\n}\r\n\r\nconst CreateMessageMemo: React.FC<CreateMessageType> = (\r\n    {\r\n        state,\r\n        addDialogMessage,\r\n        addDialogMessageText,\r\n    }\r\n) => {\r\n    const buttonClickCallback = () => addDialogMessage();\r\n    const textAreaChangeCallBack = (e: ChangeEvent<HTMLTextAreaElement>) => addDialogMessageText(e.currentTarget.value);\r\n\r\n    return (\r\n        <form className={css.form}>\r\n            <h4 className=\"form-title\">Create Post</h4>\r\n\r\n            <CustomTextArea\r\n                value={state}\r\n                onChange={textAreaChangeCallBack}\r\n                label=\"Enter post message\"/>\r\n\r\n            <CustomButton\r\n                onClick={buttonClickCallback}\r\n                type=\"button\"\r\n            >\r\n                Add message\r\n            </CustomButton>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport const CreateMessage = React.memo(CreateMessageMemo);\r\n","import React from \"react\";\r\nimport {Message} from \"./Message/Message\";\r\nimport css from './Messages.module.scss';\r\nimport {CreateMessage} from \"./CreateMessage/CreateMessage\";\r\nimport {MessagesType} from \"../../../../redux/reducers/dialogsReducer\";\r\n\r\ntype MessagesPropsType = {\r\n    state: Array<MessagesType>\r\n    addDialogMessage: () => void\r\n    addDialogMessageText: (messageText: string) => void\r\n    messageText: string\r\n}\r\n\r\nconst MessagesMemo: React.FC<MessagesPropsType> = (\r\n    {\r\n        state,\r\n        addDialogMessage,\r\n        addDialogMessageText,\r\n        messageText\r\n    }\r\n) => {\r\n    const messageElements = state && state\r\n        .map((message: MessagesType) => <Message text={message.text}/>);\r\n\r\n    return (\r\n        <div className={css.listMessage}>\r\n            {messageElements}\r\n\r\n            <CreateMessage\r\n                addDialogMessage={addDialogMessage}\r\n                addDialogMessageText={addDialogMessageText}\r\n                state={messageText}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Messages = React.memo(MessagesMemo);\r\n","import React from \"react\";\r\nimport css from './Dialogs.module.scss';\r\nimport {Persons} from \"./Persons/Persons\";\r\nimport {Messages} from \"./Messages/Messages\";\r\nimport {DialogsType} from \"../../../redux/reducers/dialogsReducer\";\r\n\r\ntype DialogsPropsType = {\r\n    dialogs: DialogsType\r\n    addDialogMessage: () => void\r\n    addDialogMessageText: (messageText: string) => void\r\n}\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = React.memo((\r\n    {\r\n        dialogs,\r\n        addDialogMessage,\r\n        addDialogMessageText,\r\n    }\r\n) => {\r\n    return (\r\n        <div className={css.dialogs}>\r\n\r\n            <Persons\r\n                state={dialogs.persons}/>\r\n\r\n            <Messages\r\n                addDialogMessage={addDialogMessage}\r\n                addDialogMessageText={addDialogMessageText}\r\n                messageText={dialogs.messageText}\r\n                state={dialogs.messages}/>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\n\r\n","import { IGlobalState } from '../store';\r\n\r\ninterface IRootState extends IGlobalState {}\r\n\r\nexport const selectDialogs = (state: IRootState) => state.dialogs;\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {addDialogMessageAC, addDialogMessageTextAC} from \"../../../redux/actions/dialogsActions\";\r\nimport {Dialogs} from \"../../../components/Main/Dialogs/Dialogs\";\r\nimport {useDialogsDispatch as useDispatch} from \"../../../redux/actions/dialogsActions\";\r\nimport {selectDialogs} from \"../../../redux/selectors/dialogsSelectors\";\r\n\r\nexport const DialogsContainer: React.FC = () => {\r\n    const dialogs = useSelector(selectDialogs);\r\n    const dispatch = useDispatch();\r\n\r\n    const addDialogMessage = () => dispatch(addDialogMessageAC());\r\n    const addDialogMessageText = (title: string) => dispatch(addDialogMessageTextAC(title));\r\n\r\n    return <Dialogs addDialogMessage={addDialogMessage}\r\n                    addDialogMessageText={addDialogMessageText}\r\n                    dialogs={dialogs}/>\r\n};\r\n","import {DIALOGS_TYPES} from \"../constats/dialogsConstats\";\r\nimport {useDispatch as _useDispatch} from \"react-redux\";\r\n\r\nexport type DialogsACType =\r\n    ReturnType<typeof addDialogMessageAC>\r\n    | ReturnType<typeof addDialogMessageTextAC>\r\n\r\n\r\nexport const addDialogMessageAC = () => ({\r\n    type: DIALOGS_TYPES.ADD_DIALOG_MESSAGE\r\n} as const);\r\nexport const addDialogMessageTextAC = (messageText: string) => ({\r\n    type: DIALOGS_TYPES.ADD_DIALOG_MESSAGE_TEXT,\r\n    payload: {messageText}\r\n} as const);\r\n\r\n\r\nexport function useDialogsDispatch() {\r\n    const dispatch = _useDispatch();\r\n    return (ActionCreator: DialogsACType) => dispatch(ActionCreator);\r\n}","import React from \"react\";\r\nimport css from './User.module.scss';\r\n\r\nexport const User: React.FC = () => {\r\n    return (\r\n        <div className={css.user}>\r\n\r\n            <div className={css.ava}>\r\n\r\n                <img className={css.pic}\r\n                     src=\"https://iqonic.design/themes/socialv/html-dark/images/user/01.jpg\"\r\n                     alt=\"\"/>\r\n            </div>\r\n\r\n            <h5 className={css.name}>\r\n                Anna Sthesia\r\n            </h5>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport css from './Message.module.scss';\r\n\r\ntype MessageTypeProps = {\r\n    message: string,\r\n}\r\n\r\nconst MessageMemo: React.FC<MessageTypeProps> = (\r\n    {\r\n        message\r\n    }\r\n) => {\r\n    return (\r\n        <div className={css.message}>\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Message = React.memo(MessageMemo);\r\n","import React from \"react\";\r\nimport css from './Like.module.scss';\r\n\r\ntype LikeTypeProps = {\r\n    like: number\r\n}\r\n\r\nconst LikeMemo: React.FC<LikeTypeProps> = (\r\n    {\r\n        like\r\n    }\r\n) => {\r\n    return (\r\n        <div className={css.like}>\r\n            <img className={css.pic}\r\n                 src=\"https://iqonic.design/themes/socialv/html-dark/images/icon/01.png\"\r\n                 alt=\"\"/>\r\n            <span>{like}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Like = React.memo(LikeMemo);\r\n","import React from \"react\";\r\nimport css from './Post.module.scss';\r\nimport {User} from \"./User/User\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {Like} from \"./Like/Like\";\r\n\r\ntype PostPropsType = {\r\n    text: string\r\n    like: number\r\n}\r\n\r\nconst PostMemo: React.FC<PostPropsType> = (\r\n    {\r\n        text,\r\n        like\r\n    }\r\n) => {\r\n    return (\r\n        <article className={css.post}>\r\n            <User/>\r\n            <Message message={text}/>\r\n            <Like like={like}/>\r\n        </article>\r\n    );\r\n};\r\n\r\nexport const Post = React.memo(PostMemo);\r\n","import React from \"react\";\r\nimport css from './Posts.module.scss';\r\nimport {Post} from \"./Post/Post\";\r\nimport {ProfilePostType} from \"../../../../redux/reducers/profileReducer\";\r\n\r\ntype PostsPropsType = {\r\n    state: Array<ProfilePostType>\r\n}\r\n\r\nconst PostsMemo: React.FC<PostsPropsType> = (\r\n    {\r\n        state\r\n    }\r\n) => {\r\n\r\n    const postElements = state && state\r\n        .map(post => <Post key={post.id} text={post.text} like={post.like}/>);\r\n\r\n    return (\r\n        <section className={css.posts}>\r\n            {postElements}\r\n        </section>\r\n    );\r\n};\r\n\r\nexport const Posts = React.memo(PostsMemo);\r\n","import React from \"react\";\r\nimport css from './User.module.scss';\r\n\r\nexport const User: React.FC = () => {\r\n    return (\r\n\r\n        <div className={css.user}>\r\n            <div className={css.backgroundWrapper}>\r\n                <img className={css.background}\r\n                     src=\"https://iqonic.design/themes/socialv/html-dark/images/page-img/profile-bg1.jpg\"\r\n                     alt=\"Bni Cyst bg\"/>\r\n            </div>\r\n\r\n            <figure className={css.info}>\r\n                <div className={css.avatarWrapper}>\r\n                    <img className={css.avatar}\r\n                         src=\"https://iqonic.design/themes/socialv/html-dark/images/user/11.png\"\r\n                         alt=\"Bni Cyst ava\"/>\r\n                </div>\r\n\r\n                <figcaption className={css.caption}>\r\n                    Bni Cyst\r\n                </figcaption>\r\n            </figure>\r\n        </div>\r\n    );\r\n};\r\n","import React, {ChangeEvent} from \"react\";\r\nimport css from \"./CreatePost.module.scss\";\r\nimport {CustomTextArea} from \"../../../ui-elements/CustomTextArea/CustomTextArea\";\r\nimport {CustomButton} from \"../../../ui-elements/CustomButton/CustomButton\";\r\n\r\ntype CreatePostType = {\r\n    state: string\r\n    addProfilePost: () => void\r\n    addProfilePostText: (title: string) => void\r\n}\r\n\r\nconst CreatePostMemo: React.FC<CreatePostType> = (\r\n    {\r\n        state,\r\n        addProfilePost,\r\n        addProfilePostText,\r\n    }\r\n) => {\r\n    const buttonClickCallback = () => addProfilePost();\r\n    const textAreaChangeCallBack = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        debugger\r\n        addProfilePostText(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <form className={css.form}>\r\n            <h4 className=\"form-title\">Create Post</h4>\r\n\r\n            <CustomTextArea\r\n                value={state}\r\n                onChange={textAreaChangeCallBack}\r\n                label=\"Enter post message\"/>\r\n\r\n            <CustomButton\r\n                onClick={buttonClickCallback}\r\n                type=\"button\"\r\n            >\r\n                Add post\r\n            </CustomButton>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport const CreatePost = React.memo(CreatePostMemo);\r\n","import React from \"react\";\r\nimport {Posts} from \"./Posts/Posts\";\r\nimport {User} from \"./User/User\";\r\nimport {CreatePost} from \"./CreatePost/CreatePost\";\r\nimport {ProfileType} from \"../../../redux/reducers/profileReducer\";\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileType\r\n    addProfilePost: () => void\r\n    addProfilePostText: (title: string) => void\r\n}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = React.memo((\r\n    {\r\n        profile,\r\n        addProfilePost,\r\n        addProfilePostText,\r\n    }\r\n) => {\r\n    return (\r\n        <>\r\n            <User/>\r\n\r\n            <CreatePost\r\n                addProfilePost={addProfilePost}\r\n                addProfilePostText={addProfilePostText}\r\n                state={profile.postText}/>\r\n\r\n            <Posts\r\n                state={profile.posts}/>\r\n        </>\r\n    );\r\n});\r\n","import { IGlobalState } from '../store';\r\n\r\ninterface IRootState extends IGlobalState {}\r\n\r\nexport const selectProfile = (state: IRootState) => state.profile;\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {addProfilePostAC, addProfilePostTextAC} from \"../../../redux/actions/profileActions\";\r\nimport {Profile} from \"../../../components/Main/Profile/Profile\";\r\nimport {selectProfile} from \"../../../redux/selectors/profileSelectors\";\r\nimport {useProfileDispatch as useDispatch} from \"../../../redux/actions/profileActions\";\r\n\r\nexport const ProfileContainer: React.FC = () => {\r\n    const profile = useSelector(selectProfile);\r\n    const dispatch = useDispatch();\r\n\r\n    const addProfilePost = () => dispatch(addProfilePostAC());\r\n    const addProfilePostText = (title: string) => dispatch(addProfilePostTextAC(title));\r\n\r\n    return <Profile addProfilePostText={addProfilePostText}\r\n                    addProfilePost={addProfilePost}\r\n                    profile={profile}/>\r\n};\r\n","import {v1} from \"uuid\";\r\nimport {PROFILE_TYPES} from \"../constats/profileConstats\";\r\nimport {useDispatch as _useDispatch} from \"react-redux\";\r\nimport {DialogsACType} from \"./dialogsActions\";\r\n\r\nexport type ProfileACType =\r\n    ReturnType<typeof addProfilePostAC> |\r\n    ReturnType<typeof addProfilePostTextAC>\r\n\r\nexport const addProfilePostAC = () => ({\r\n    type: PROFILE_TYPES.ADD_PROFILE_POST,\r\n    payload: {postId: v1()}\r\n} as const);\r\nexport const addProfilePostTextAC = (postText: string) => ({\r\n    type: PROFILE_TYPES.ADD_PROFILE_POST_TEXT,\r\n     payload: {postText}\r\n} as const);\r\n\r\nexport function useProfileDispatch() {\r\n    const dispatch = _useDispatch();\r\n    return (ActionCreator: ProfileACType) => dispatch(ActionCreator);\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport css from './SidebarItem.module.scss';\r\nimport {SidebarType} from \"../../../../redux/actions/sidebarActions\";\r\n\r\ntype SidebarPropsType = {\r\n    sidebarItem: SidebarType\r\n}\r\n\r\nconst ItemMemo: React.FC<SidebarPropsType> = (\r\n    {\r\n        sidebarItem\r\n    }\r\n) => {\r\n    return (\r\n        <li className={css.item}>\r\n            <NavLink activeClassName={css.active} to={sidebarItem.slug}>{sidebarItem.title}</NavLink>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport const Item = React.memo(ItemMemo);\r\n","import React from \"react\";\r\nimport css from './Sidebar.module.scss';\r\nimport {Item} from \"./SidebarItem/SidebarItem\";\r\nimport {SidebarType} from \"../../../redux/actions/sidebarActions\";\r\n\r\ntype SidebarPropsType = {\r\n    sidebar: Array<SidebarType>\r\n}\r\nexport const Sidebar: React.FC<SidebarPropsType> = React.memo((\r\n    {\r\n        sidebar\r\n    }\r\n) => {\r\n\r\n    const sidebarElements = sidebar && sidebar\r\n        .map((sidebarItem: SidebarType) => <Item sidebarItem={sidebarItem}/>);\r\n\r\n    return (\r\n        <aside className={css.sidebar}>\r\n\r\n            <nav className={css.sidebarNav}>\r\n\r\n                <ul className={css.list}>\r\n                    {sidebarElements}\r\n                </ul>\r\n            </nav>\r\n        </aside>\r\n    );\r\n});\r\n","import { IGlobalState } from '../store';\r\n\r\ninterface IRootState extends IGlobalState {}\r\n\r\nexport const selectSidebar = (state: IRootState) => state.sidebar;\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Sidebar} from \"../../../components/Main/Sidebar/Sidebar\";\r\nimport {selectSidebar} from \"../../../redux/selectors/sidebarSelectors\";\r\n\r\nexport const SidebarContainer: React.FC = () => {\r\n    const sidebar = useSelector(selectSidebar);\r\n\r\n    return <Sidebar sidebar={sidebar}/>\r\n};\r\n\r\n","import React from \"react\";\r\nimport css from './User.module.scss';\r\nimport {UsersType} from \"../../../../redux/reducers/usersReducer\";\r\nimport {CustomButton} from \"../../../ui-elements/CustomButton/CustomButton\";\r\n\r\ntype UserPropsType = {\r\n    user: UsersType\r\n    unFollowUser: (userId: string) => void\r\n    followUser: (userId: string) => void\r\n}\r\n\r\nexport const User: React.FC<UserPropsType> = React.memo((\r\n    {\r\n        user,\r\n        unFollowUser,\r\n        followUser,\r\n    }\r\n) => {\r\n\r\n    let userSmPhoto = user.photos.small !== null\r\n        ? user.photos.small\r\n        : \"/react_social_network/images/user/05.jpg\";\r\n\r\n    let userLgPhoto = user.photos.large !== null\r\n        ? user.photos.large\r\n        : \"/react_social_network/images/page-img/profile-bg1.jpg\";\r\n\r\n    let userStatus = user.status !== null ? user.status : \"@designer\";\r\n\r\n    return (\r\n        <li className={css.card}>\r\n            <div className={css.coverContainer}>\r\n                <img\r\n                    className={css.coverImg}\r\n                    alt=\"cover-img\"\r\n                    src={userLgPhoto}/>\r\n            </div>\r\n            <div className={css.userContainer}>\r\n                <div className={css.userDetails}>\r\n                    <div className={css.userImgInner}>\r\n                        <img\r\n                            className={css.userImg}\r\n                            alt=\"profile-img\"\r\n                            src={userSmPhoto}/>\r\n                    </div>\r\n                    <div>\r\n                        <h4>{user.name}</h4>\r\n                        <h6>{userStatus}</h6>\r\n                        {/*<p>{user.location.city}, {user.location.country}</p>*/}\r\n                    </div>\r\n                </div>\r\n                {\r\n                    !user.followed\r\n                        ? <CustomButton onClick={() => followUser(user.id)}>Follow</CustomButton>\r\n                        : <CustomButton onClick={() => unFollowUser(user.id)}>UnFollow</CustomButton>\r\n                }\r\n            </div>\r\n        </li>\r\n    );\r\n});\r\n","import React from \"react\";\r\nimport {User} from \"./User/User\";\r\nimport {UsersType} from \"../../../redux/reducers/usersReducer\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {CustomButton} from \"../../ui-elements/CustomButton/CustomButton\";\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UsersType>\r\n    unFollowUser: (userId: string) => void\r\n    followUser: (userId: string) => void\r\n    loadNextCallback: (pagesIndex: number) => void\r\n    loadMoreCallback: (pagesIndex: number) => void\r\n    currentPage: number\r\n    totalCount: number\r\n    pageSize: number\r\n}\r\nexport const Users: React.FC<UsersPropsType> = (\r\n    {\r\n        users,\r\n        unFollowUser,\r\n        followUser,\r\n        loadNextCallback,\r\n        loadMoreCallback,\r\n        currentPage,\r\n        totalCount,\r\n        pageSize,\r\n    }\r\n) => {\r\n    const propsTotal = !totalCount ? 0 : totalCount;\r\n    const propsPageSize = (!pageSize || pageSize === 0) ? 1 : pageSize;\r\n\r\n    const pagesCnt = Math.ceil(propsTotal / propsPageSize);\r\n    const pagesIndexes = [];\r\n    for (let i = 1; i <= pagesCnt; i++) pagesIndexes.push(i);\r\n    const pages = pagesIndexes.map((pagesIndex: number) => {\r\n\r\n        const loadNext = () => loadNextCallback(pagesIndex);\r\n\r\n        return (\r\n            currentPage === pagesIndex\r\n                ? <strong>{pagesIndex}-</strong>\r\n                : <small onClick={loadNext}>{pagesIndex}-</small>\r\n        )\r\n    });\r\n\r\n    let leftColumn: any = [];\r\n    let rightColumn: any = [];\r\n    users\r\n        .map((user: UsersType, index: number) => {\r\n            index % 2 === 0\r\n                ? leftColumn.push(<User key={user.id}\r\n                                        user={user}\r\n                                        unFollowUser={unFollowUser}\r\n                                        followUser={followUser}/>)\r\n                : rightColumn.push(<User key={user.id}\r\n                                         user={user}\r\n                                         unFollowUser={unFollowUser}\r\n                                         followUser={followUser}/>)\r\n        });\r\n\r\n    const loadMore = () => loadMoreCallback(currentPage + 1);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {pages}\r\n            </div>\r\n            <Grid container item xs={12} spacing={2}>\r\n                <React.Fragment>\r\n                    <Grid key=\"1\" item xs={6}>\r\n                        <ul>{leftColumn}</ul>\r\n                    </Grid>\r\n                    <Grid key=\"2\" item xs={6}>\r\n                        <ul>{rightColumn}</ul>\r\n                    </Grid>\r\n                </React.Fragment>\r\n            </Grid>\r\n\r\n            <CustomButton onClick={loadMore}>Get users</CustomButton>\r\n        </>\r\n    );\r\n};","import React from 'react';\r\nimport css from \"./PreLoader.module.scss\";\r\n\r\n\r\nconst PreLoaderMemo: React.FC = (\r\n    {\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    return (\r\n        <div className={css.preLoaderCubic}  />\r\n    );\r\n};\r\n\r\nexport const PreLoader = React.memo(PreLoaderMemo);\r\n","import React from \"react\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {\r\n    followUserAC,\r\n    setCurrentPageAC,\r\n    setTotalCountAC, showMoreUsersAC,\r\n    showNextUsersAC, toggleIsFetchingAC,\r\n    unFollowUserAC\r\n} from \"../../../redux/actions/usersActions\";\r\nimport {Users} from \"../../../components/Main/Users/Users\";\r\nimport {PreLoader} from \"../../../components/ui-elements/PreLoader/PreLoader\";\r\nimport {UsersState} from \"../../../redux/reducers/usersReducer\";\r\n\r\nclass UsersContainer extends React.Component<TProps> {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n\r\n        this.props.toggleIsFetchingAC(true);\r\n\r\n        axios\r\n            .get(`https://social-network.samuraijs.com/api/1.0/users?count=${pageSize}&page=${currentPage}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetchingAC(false);\r\n                this.props.showMoreUsersAC(response.data.items);\r\n                //this.props.setTotalCountAC(response.data.totalCount);\r\n                this.props.setTotalCountAC(200);\r\n            });\r\n    };\r\n\r\n    loadMoreCallback = (pagesIndex: number) => {\r\n        const pageSize = this.props;\r\n        this.props.setCurrentPageAC(pagesIndex);\r\n\r\n        axios\r\n            .get(`https://social-network.samuraijs.com/api/1.0/users?count=${pageSize}&page=${pagesIndex}`)\r\n            .then(response => {\r\n                this.props.showMoreUsersAC(response.data.items);\r\n            });\r\n    };\r\n\r\n    loadNextCallback = (pagesIndex: number) => {\r\n        const pageSize = this.props;\r\n\r\n        this.props.toggleIsFetchingAC(true);\r\n        this.props.setCurrentPageAC(pagesIndex);\r\n        axios\r\n            .get(`https://social-network.samuraijs.com/api/1.0/users?count=${pageSize}&page=${pagesIndex}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetchingAC(false);\r\n                this.props.showNextUsersAC(response.data.items);\r\n            });\r\n    };\r\n\r\n    followUserCallback = (userId: string) => this.props.followUserAC(userId);\r\n    unFollowUserCallback = (userId: string) => this.props.unFollowUserAC(userId);\r\n\r\n    render() {\r\n\r\n        const {\r\n            isFetching,\r\n            users,\r\n            currentPage,\r\n            pageSize,\r\n            totalCount,\r\n        } = this.props;\r\n\r\n        return (\r\n            isFetching\r\n            ? <PreLoader/>\r\n            : <Users\r\n                users={users}\r\n                currentPage={currentPage}\r\n                pageSize={pageSize}\r\n                totalCount={totalCount}\r\n                unFollowUser={this.unFollowUserCallback}\r\n                loadNextCallback={this.loadNextCallback}\r\n                loadMoreCallback={this.loadMoreCallback}\r\n                followUser={this.followUserCallback}/>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({users}: { users: UsersState }): UsersState => {\r\n    return {\r\n        users: users.users,\r\n        isFetching: users.isFetching,\r\n        currentPage: users.currentPage,\r\n        pageSize: users.pageSize,\r\n        totalCount: users.totalCount\r\n    }\r\n};\r\n\r\nconst connector = connect(mapStateToProps, {\r\n    followUserAC,\r\n    unFollowUserAC,\r\n    showNextUsersAC,\r\n    showMoreUsersAC,\r\n    setCurrentPageAC,\r\n    toggleIsFetchingAC,\r\n    setTotalCountAC,\r\n});\r\n\r\ntype TProps = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(UsersContainer);","import {USERS_TYPES} from \"../constats/usersConstats\";\r\nimport {UsersType} from \"../reducers/usersReducer\";\r\n\r\nexport type UsersACType =\r\n    ReturnType<typeof showNextUsersAC>\r\n    | ReturnType<typeof showMoreUsersAC>\r\n    | ReturnType<typeof followUserAC>\r\n    | ReturnType<typeof unFollowUserAC>\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setTotalCountAC>\r\n    | ReturnType<typeof toggleIsFetchingAC>\r\n\r\n\r\nexport const showNextUsersAC = (users: Array<UsersType>) => ({\r\n    type: USERS_TYPES.SHOW_NEXT_USERS,\r\n    payload: {users}\r\n} as const );\r\nexport const showMoreUsersAC = (users: Array<UsersType>) => ({\r\n    type: USERS_TYPES.SHOW_MORE_USERS,\r\n    payload: {users}\r\n} as const );\r\nexport const unFollowUserAC = (userId: string) => ({\r\n    type: USERS_TYPES.UN_FOLLOW_USER,\r\n    payload: {userId}\r\n} as const );\r\nexport const followUserAC = (userId: string) => ({\r\n    type: USERS_TYPES.FOLLOW_USER,\r\n    payload: {userId}\r\n} as const );\r\nexport const setCurrentPageAC = (page: number) => ({\r\n    type: USERS_TYPES.SET_CURRENT_PAGE,\r\n    payload: {page}\r\n} as const );\r\nexport const setTotalCountAC = (totalCount: number) => ({\r\n    type: USERS_TYPES.SET_TOTAL_COUNT,\r\n    payload: {totalCount}\r\n} as const );\r\nexport const toggleIsFetchingAC = (isFetching: boolean) => ({\r\n    type: USERS_TYPES.TOGGLE_IS_FETCHING,\r\n    payload: {isFetching}\r\n} as const );\r\n","import React from \"react\";\r\nimport css from './Main.module.scss';\r\nimport {Route} from \"react-router-dom\";\r\nimport {DialogsContainer} from \"../../containers/Main/Dialogs/DialogsContainer\";\r\nimport {ProfileContainer} from \"../../containers/Main/Profile/ProfileContainer\";\r\nimport {SidebarContainer} from \"../../containers/Main/Sidebar/SidebarContainer\";\r\nimport UsersContainer from \"../../containers/Main/Users/UsersContainer\";\r\n\r\nexport const Main: React.FC = () => {\r\n    return (\r\n        <main className={css.main}>\r\n            <SidebarContainer/>\r\n\r\n            <div className={css.content}>\r\n                <Route path=\"/profile\"\r\n                       render={() =>\r\n                           <ProfileContainer/>\r\n                       }/>\r\n\r\n                <Route path=\"/dialogs\"\r\n                       render={() =>\r\n                           <DialogsContainer/>\r\n                       }/>\r\n\r\n                <Route path=\"/users\"\r\n                       render={() =>\r\n                           <UsersContainer/>\r\n                       }/>\r\n            </div>\r\n        </main>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport {Header} from \"./components/Header/Header\";\r\nimport {Main} from \"./components/Main/Main\";\r\n\r\nconst App: React.FC = () => {\r\n\r\n    return (\r\n        <div className=\"app-inner\">\r\n            <Header/>\r\n\r\n            <div className=\"wrapper\">\r\n                <Main/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {store} from \"./redux/store\";\r\nimport {Provider} from \"react-redux\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport './index.scss';\r\n\r\nlet reRenderEntireTree = () => {\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n        , document.getElementById('root')\r\n    );\r\n};\r\n\r\nreRenderEntireTree();\r\n\r\nstore.subscribe(reRenderEntireTree);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}